3.3.1
В этой и последующих задачах мы создадим свой простой аналог стандартного класса string для удобной работы со строками.

Начнем мы с написания конструктора.
В этой задаче вам требуется реализовать конструктор, который принимает на вход C-style строку, вычисляет ее размер (без учета завершающего 0 символа) и сохраняет его в поле size, кроме того, конструктор должен аллоцировать память достаточную для хранения копии переданной строки (вместе с завершающим 0 символом), копирует переданную строку в выделенную память и сохраняет указатель на начало этой области памяти в поле str. Т.е. в результате работы конструктора в поле str должен оказаться указатель на C-строку c копией исходной строки, а в поле size — длина строки без учета завершающего нулевого символа.

3.3.2
Конструкторов у структуры может быть несколько. 
Для строки может оказаться полезным заполняющий конструктор (например, чтобы создать строку пробелов). 
Заполняющий конструктор принимает число и символ, и создает строку с заданным количеством повторений переданного символа. 
Условия налагаемые на реализацию конструктора те же самые (в поле size размер без учета завершающего 0 символа, в поле str C-style строка, т.е. с завершающим 0 символом). Кроме конструктора в этой задаче вам нужно также реализовать и деструктор, который освободит выделенную память.

3.3.3
Реализованные в предыдущих заданиях конструкторы и деструктор берут на себя работу по управлению ресурсами. 
Теперь можно дополнить структуру String различными полезными методами.
